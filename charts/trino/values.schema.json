{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "properties": {
        "resources": {
            "description": "Your service will have at least the requested resources and never more than its limits. No limit for a resource and you can consume everything left on the host machine.",
            "type": "object",
            "properties": {
                "limits": {
                    "description": "max resources",
                    "type": "object",
                    "properties": {
                      "nvidia.com/gpu": {
                        "description": "GPU to allocate to this instance. This is also requested",
                        "type": "string",
                        "default": "0",
                        "render": "slider",
                        "sliderMin": 0,
                        "sliderMax": 3,
                        "sliderStep": 1,
                        "sliderUnit": ""
                      },
                      "cpu": {
                        "description": "The maximum amount of cpu",
                        "title": "CPU",
                        "type": "string",
                        "default": "30000m",
                        "render": "slider",
                        "sliderMin": 50,
                        "sliderMax": 40000,
                        "sliderStep": 50,
                        "sliderUnit": "m",
                        "sliderExtremity": "up",
                        "sliderExtremitySemantic": "Maximum",
                        "sliderRangeId": "cpu"
                      },
                      "memory": {
                        "description": "The maximum amount of memory",
                        "title": "Memory", 
                        "type": "string",
                        "default": "50Gi",
                        "render": "slider",
                        "sliderMin": 1,
                        "sliderMax": 200,
                        "sliderStep": 1,
                        "sliderUnit": "Gi",
                        "sliderExtremity": "up",
                        "sliderExtremitySemantic": "Maximum",
                        "sliderRangeId": "memory"
                      }
                    }
                },
                "requests": {
                    "description": "Guaranteed resources",
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "description": "The amount of cpu guaranteed",
                        "title": "CPU",
                        "type": "string",
                        "default": "100m",
                        "render": "slider",
                        "sliderMin": 50,
                        "sliderMax": 40000,
                        "sliderStep": 50,
                        "sliderUnit": "m",
                        "sliderExtremity": "down",
                        "sliderExtremitySemantic": "guaranteed",
                        "sliderRangeId": "cpu"
                      },
                      "memory": {
                        "description": "The amount of memory guaranteed",
                        "title": "memory",
                        "type": "string",
                        "default": "2Gi",
                        "render": "slider",
                        "sliderMin": 1,
                        "sliderMax": 200,
                        "sliderStep": 1,
                        "sliderUnit": "Gi",
                        "sliderExtremity": "down",
                        "sliderExtremitySemantic": "guaranteed",
                        "sliderRangeId": "memory"
                      }
                    }
                }
            }
        },
        "discovery": {
            "description": "configure your service to autodetect some ressources.",
            "type": "object",
            "properties": {
              "hive": {
                "type": "boolean",
                "title": "Enable hive metastore discovery",
                "description": "discover your hive metastore service",
                "default": true
              },
              "mongodb": {
                "type": "boolean",
                "title": "Enable mongodb metastore discovery",
                "description": "discover your mongodb service",
                "default": true
              },
              "postgres": {
                "type": "boolean",
                "title": "Enable postgres metastore discovery",
                "description": "discover your postgres service",
                "default": true
              },
              "elastic": {
                "type": "boolean",
                "title": "Enable elastic metastore discovery",
                "description": "discover your elastic service",
                "default": true
              }
            }
        },
        "worker": {
            "description": "configure your trino worker",
            "type": "object",
            "properties": {
              "replicas": {
                "description": "number of trino workers",
                "type": "string",
                "default": "2",
                "render": "slider",
                "sliderMin": 1,
                "sliderMax": 10,
                "sliderStep": 1,
                "sliderUnit": "" 
              }  
            }
        },
        "security": {
            "description": "security specific configuration",
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "title": "Admin user",
                    "default": "admin",
                    "x-form": {
                      "value": "{{project.id}}"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Password",
                    "default": "changeme",
                    "x-form": {
                        "value": "{{project.password}}"
                    }
                },
                "allowlist": {
                    "type": "object",
                    "description": "IP protection",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "title": "Enable IP protection",
                        "description": "Only the configured set of IPs will be able to reach the service",
                        "default": true,
                        "x-form": {
                          "value": "{{region.defaultIpProtection}}"
                        }
                      },
                      "ip": {
                        "type": "string",
                        "description": "the white list of IP is whitespace",
                        "title": "Whitelist of IP",
                        "x-form": {
                          "value": "{{user.ip}}"
                        },
                        "hidden": {
                            "value": false,
                            "path": "security/allowlist/enabled"
                        } 
                      }
                    }
                },
                "networkPolicy": {
                    "type": "object",
                    "description": "Define access policy to the service",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "title": "Enable network policy",
                        "description": "Only pod from the same namespace will be allowed",
                        "default": true,
                        "x-form": {
                          "value": "{{region.defaultNetworkPolicy}}"
                        }
                      }
                    }
                }
            }
        },
        "s3": {
            "description": "Configuration of temporary identity",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Add S3 temporary identity inside your environment",
                    "default": true
                },
                "accessKeyId": {
                    "description": "AWS Access Key",
                    "type": "string",
                    "x-form": {
                        "value": "{{s3.AWS_ACCESS_KEY_ID}}"
                    },
                    "hidden": {
                        "value": false,
                        "path": "s3/enabled"
                    }
                },
                "endpoint": {
                    "description": "AWS S3 Endpoint",
                    "type": "string",
                    "x-form": {
                        "value": "{{s3.AWS_S3_ENDPOINT}}"
                    },
                    "hidden": {
                        "value": false,
                        "path": "s3/enabled"
                    }
                },
                "defaultRegion": {
                    "description": "AWS S3 default region",
                    "type": "string",
                    "x-form": {
                        "value": "{{s3.AWS_DEFAULT_REGION}}"
                    },
                    "hidden": {
                        "value": false,
                        "path": "s3/enabled"
                    }
                },
                "secretAccessKey": {
                    "description": "AWS S3 secret access key",
                    "type": "string",
                    "x-form": {
                        "value": "{{s3.AWS_SECRET_ACCESS_KEY}}"
                    },
                    "hidden": {
                        "value": false,
                        "path": "s3/enabled"
                    }
                },
                "sessionToken": {
                    "description": "AWS S3 session Token",
                    "type": "string",
                    "x-form": {
                        "value": "{{s3.AWS_SESSION_TOKEN}}"
                    },
                    "hidden": {
                        "value": false,
                        "path": "s3/enabled"
                    }
                }
            }
        },
        "ingress": {
            "type": "object",
            "form": true,
            "title": "Ingress Details",
            "properties": {
                "hostname": {
                    "type": "string",
                    "form": true,
                    "title": "Hostname",
                    "x-form": {
                      "value": "{{project.id}}-{{k8s.randomSubdomain}}.{{k8s.domain}}"
                  }
                }
            }
        },
        "tags": {
          "description": "Configuration of resource tags (labels)",
          "type": "object",
          "properties": {
            "filtertag1": {      
                "description": "resource tag number 1",
                "type": "string",
                "default": "",
                "x-form": {
                    "value": "{{tags.filtertag1}}"
                }
            },
            "filtertag2": {
                "description": "resource tag number 2",
                "type": "string",
                "default": "",
                "x-form": {
                    "value": "{{tags.filtertag2}}"
                }
            },
            "filtertag3": {
                "description": "resource tag number 3",
                "type": "string",
                "default": "",
                "x-form": {
                    "value": "{{tags.filtertag3}}"
                }
            }
          }
        }
    }
}